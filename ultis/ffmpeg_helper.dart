import 'dart:convert';
import 'dart:io';

class FFmpegHelper {
  /// üìå L·∫•y th·ªùi l∆∞·ª£ng c·ªßa file nh·∫°c (t√≠nh theo gi√¢y)
  static Future<int?> getAudioDuration(String filePath) async {
    try {
      // Ch·∫°y l·ªánh FFmpeg ƒë·ªÉ l·∫•y th√¥ng tin file nh·∫°c
      final result = await Process.run(
        'ffmpeg',
        ['-i', filePath],
        stderrEncoding: utf8,
      );

      // Ki·ªÉm tra l·ªói
      if (result.stderr is! String) {
        print("‚ö†Ô∏è FFmpeg kh√¥ng tr·∫£ v·ªÅ k·∫øt qu·∫£ h·ª£p l·ªá.");
        return null;
      }

      final output = result.stderr as String;

      // Regex ƒë·ªÉ l·∫•y th·ªùi l∆∞·ª£ng t·ª´ output c·ªßa FFmpeg
      final regex = RegExp(r'Duration: (\d+):(\d+):(\d+\.\d+)');
      final match = regex.firstMatch(output);

      if (match == null) {
        print("‚ùå Kh√¥ng t√¨m th·∫•y th√¥ng tin th·ªùi l∆∞·ª£ng file.");
        return null;
      }

      // Chuy·ªÉn ƒë·ªïi th·ªùi l∆∞·ª£ng sang gi√¢y
      final hours = int.parse(match.group(1)!);
      final minutes = int.parse(match.group(2)!);
      final seconds = double.parse(match.group(3)!);

      final durationInSeconds =
          (hours * 3600) + (minutes * 60) + seconds.toInt();

      print("‚úÖ Th·ªùi l∆∞·ª£ng file: $durationInSeconds gi√¢y");
      return durationInSeconds;
    } catch (e) {
      print("‚ùå L·ªói khi l·∫•y th·ªùi l∆∞·ª£ng file: $e");
      return null;
    }
  }
}
